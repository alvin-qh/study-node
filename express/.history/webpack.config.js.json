{
    "sourceFile": "webpack.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1687286574353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1687286619180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,19 @@\n-const webpack = require(\"webpack');\n-const glob = require('glob');\n-const path = require('path');\n+const webpack = require(\"webpack\");\n+const glob = require(\"glob\");\n+const path = require(\"path\");\n \n-const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n-const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n-const CopyWebpackPlugin = require('copy-webpack-plugin');\n-const WebpackAssetsPlugin = require('webpack-assets-manifest');\n+const MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\n+const { CleanWebpackPlugin } = require(\"clean-webpack-plugin\");\n+const CopyWebpackPlugin = require(\"copy-webpack-plugin\");\n+const WebpackAssetsPlugin = require(\"webpack-assets-manifest\");\n \n const ProvidePlugin = webpack.ProvidePlugin;\n const ProgressPlugin = webpack.ProgressPlugin;\n \n-const isProd = process.env.NODE_ENV === 'production';\n-const src = file => path.join('asset', file || '');\n-const dist = file => path.join('src/public', file || '');\n+const isProd = process.env.NODE_ENV === \"production\";\n+const src = file => path.join(\"asset\", file || \"\");\n+const dist = file => path.join(\"src/public\", file || \"\");\n \n function makeEntries() {\n   const entries = {};\n \n"
                },
                {
                    "date": 1687286629409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,26 +16,26 @@\n \n function makeEntries() {\n   const entries = {};\n \n-  glob.sync(path.join(src('js'), '/**/main.js')).map(file => `./${file}`)\n+  glob.sync(path.join(src(\"js\"), \"/**/main.js\")).map(file => `./${file}`)\n     .forEach(file => {\n       let name = path.dirname(file);\n-      name = name.substr(name.lastIndexOf('/') + 1);\n+      name = name.substr(name.lastIndexOf(\"/\") + 1);\n       entries[name] = file;\n     });\n   return entries;\n }\n \n const prodPlugins = isProd ? [\n   new WebpackAssetsPlugin({\n-    output: 'manifest.json',\n+    output: \"manifest.json\",\n     merge: false,\n     customize(entry) {\n       switch (path.extname(entry.key).toLowerCase()) {\n-        case '.map':\n+        case \".map\":\n           return false;\n-        case '.txt':\n+        case \".txt\":\n           return false;\n       }\n       prefix = path.dirname(entry.value);\n       return { key: `${prefix}/${entry.key}`, value: entry.value };\n@@ -43,75 +43,75 @@\n   })\n ] : [];\n \n module.exports = {\n-  mode: isProd ? 'production' : 'development',\n+  mode: isProd ? \"production\" : \"development\",\n   entry: Object.assign(\n     {\n-      vendor: ['jquery', 'bootstrap', 'moment', 'lodash', 'common']\n+      vendor: [\"jquery\", \"bootstrap\", \"moment\", \"lodash\", \"common\"]\n     },\n     makeEntries()\n   ),\n   output: {\n     path: path.resolve(dist()),\n-    filename: isProd ? 'js/[name]-[chunkhash:8].js' : 'js/[name].js',\n-    publicPath: '/',\n-    chunkFilename: isProd ? 'js/[name]-[chunkhash:8].js' : 'js/[name].js',\n+    filename: isProd ? \"js/[name]-[chunkhash:8].js\" : \"js/[name].js\",\n+    publicPath: \"/\",\n+    chunkFilename: isProd ? \"js/[name]-[chunkhash:8].js\" : \"js/[name].js\",\n   },\n   resolve: {\n     alias: {\n-      common: path.resolve(src('js/common/common.js'))\n+      common: path.resolve(src(\"js/common/common.js\"))\n     },\n-    extensions: ['.js', '.vue', '.json']\n+    extensions: [\".js\", \".vue\", \".json\"]\n   },\n   optimization: {\n     minimize: isProd,\n     removeEmptyChunks: true,\n     runtimeChunk: {\n-      name: 'manifest',\n+      name: \"manifest\",\n     }\n   },\n   module: {\n     rules: [{\n       test: /\\.js$/,\n       exclude: [/node_modules/],\n       use: [\n         {\n-          loader: 'babel-loader',\n+          loader: \"babel-loader\",\n           options: {\n-            presets: ['@babel/env']\n+            presets: [\"@babel/env\"]\n           }\n         }\n       ]\n     },\n     {\n       test: /\\.(less|css)$/,\n       use: [\n         MiniCssExtractPlugin.loader,\n-        'css-loader',\n-        'less-loader'\n+        \"css-loader\",\n+        \"less-loader\"\n       ]\n     }, {\n       test: /\\.(eot|woff|woff2|ttf)$/,\n       use: [\n         {\n-          loader: 'url-loader',\n+          loader: \"url-loader\",\n           options: {\n             limit: 1024,\n-            fallback: 'file-loader',\n-            name: isProd ? 'fonts/[name]-[hash:8].[ext]' : 'fonts/[name].[ext]'\n+            fallback: \"file-loader\",\n+            name: isProd ? \"fonts/[name]-[hash:8].[ext]\" : \"fonts/[name].[ext]\"\n           }\n         }\n       ]\n     }, {\n       test: /\\.(svg|png|jpg|gif)$/,\n       use: [\n         {\n-          loader: 'url-loader',\n+          loader: \"url-loader\",\n           options: {\n             limit: 1024,\n-            fallback: 'file-loader',\n-            name: isProd ? 'images/[name]-[hash:8].[ext]' : 'images/[name].[ext]'\n+            fallback: \"file-loader\",\n+            name: isProd ? \"images/[name]-[hash:8].[ext]\" : \"images/[name].[ext]\"\n           }\n         }\n       ]\n     }]\n@@ -119,23 +119,23 @@\n   plugins: [\n     new ProgressPlugin(),\n     new CleanWebpackPlugin(),\n     new ProvidePlugin({\n-      $: 'jquery',\n-      jQuery: 'jquery',\n-      'window.jQuery': 'jquery'\n+      $: \"jquery\",\n+      jQuery: \"jquery\",\n+      \"window.jQuery\": \"jquery\"\n     }),\n     new CopyWebpackPlugin({\n       patterns: [\n         {\n-          from: src('images/*'),\n-          to: 'images/[name][ext]'\n+          from: src(\"images/*\"),\n+          to: \"images/[name][ext]\"\n         }\n       ]\n     }),\n     new MiniCssExtractPlugin({\n-      filename: isProd ? 'css/[name]-[chunkhash:8].css' : 'css/[name].css'\n+      filename: isProd ? \"css/[name]-[chunkhash:8].css\" : \"css/[name].css\"\n     }),\n     ...prodPlugins\n   ],\n-  devtool: 'cheap-source-map',\n+  devtool: \"cheap-source-map\",\n };\n"
                },
                {
                    "date": 1687286720082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           return false;\n         case \".txt\":\n           return false;\n       }\n-      prefix = path.dirname(entry.value);\n+      let prefix = path.dirname(entry.value);\n       return { key: `${prefix}/${entry.key}`, value: entry.value };\n     }\n   })\n ] : [];\n"
                },
                {
                    "date": 1687286738688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,12 @@\n     merge: false,\n     customize(entry) {\n       switch (path.extname(entry.key).toLowerCase()) {\n         case \".map\":\n-          return false;\n         case \".txt\":\n           return false;\n       }\n-      let prefix = path.dirname(entry.value);\n+      const prefix = path.dirname(entry.value);\n       return { key: `${prefix}/${entry.key}`, value: entry.value };\n     }\n   })\n ] : [];\n"
                },
                {
                    "date": 1687286774217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n   glob.sync(path.join(src(\"js\"), \"/**/main.js\")).map(file => `./${file}`)\n     .forEach(file => {\n       let name = path.dirname(file);\n-      name = name.substr(name.lastIndexOf(\"/\") + 1);\n+      name = name.sub(name.lastIndexOf(\"/\") + 1);\n       entries[name] = file;\n     });\n   return entries;\n }\n"
                },
                {
                    "date": 1687286863028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n   glob.sync(path.join(src(\"js\"), \"/**/main.js\")).map(file => `./${file}`)\n     .forEach(file => {\n       let name = path.dirname(file);\n-      name = name.sub(name.lastIndexOf(\"/\") + 1);\n+      name = name.substring(name.lastIndexOf(\"/\") + 1);\n       entries[name] = file;\n     });\n   return entries;\n }\n@@ -36,9 +36,10 @@\n         case \".txt\":\n           return false;\n       }\n       const prefix = path.dirname(entry.value);\n-      return { key: `${prefix}/${entry.key}`, value: entry.value };\n+      return { \n+        key: `${prefix}/${entry.key}`, value: entry.value };\n     }\n   })\n ] : [];\n \n"
                },
                {
                    "date": 1687286869938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,12 @@\n         case \".txt\":\n           return false;\n       }\n       const prefix = path.dirname(entry.value);\n-      return { \n-        key: `${prefix}/${entry.key}`, value: entry.value };\n+      return {\n+        key: `${prefix}/${entry.key}`,\n+        value: entry.value\n+      };\n     }\n   })\n ] : [];\n \n"
                },
                {
                    "date": 1687286888828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n         case \".map\":\n         case \".txt\":\n           return false;\n       }\n+      \n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n         value: entry.value\n"
                },
                {
                    "date": 1687286921299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,11 @@\n       switch (path.extname(entry.key).toLowerCase()) {\n         case \".map\":\n         case \".txt\":\n           return false;\n+        default:\n       }\n-      \n+\n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n         value: entry.value\n"
                },
                {
                    "date": 1687286928314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,8 @@\n       switch (path.extname(entry.key).toLowerCase()) {\n         case \".map\":\n         case \".txt\":\n           return false;\n-        default:\n       }\n \n       const prefix = path.dirname(entry.value);\n       return {\n"
                },
                {
                    "date": 1687286952581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,9 @@\n   new WebpackAssetsPlugin({\n     output: \"manifest.json\",\n     merge: false,\n     customize(entry) {\n-      switch (path.extname(entry.key).toLowerCase()) {\n-        case \".map\":\n-        case \".txt\":\n-          return false;\n-      }\n+      \n \n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n"
                },
                {
                    "date": 1687286964943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,13 @@\n   new WebpackAssetsPlugin({\n     output: \"manifest.json\",\n     merge: false,\n     customize(entry) {\n-      \n+      switch (path.extname(entry.key).toLowerCase()) {\n+        case \".map\":\n+        case \".txt\":\n+          return false;\n+      }\n \n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n"
                },
                {
                    "date": 1687286971374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,14 +30,8 @@\n   new WebpackAssetsPlugin({\n     output: \"manifest.json\",\n     merge: false,\n     customize(entry) {\n-      switch (path.extname(entry.key).toLowerCase()) {\n-        case \".map\":\n-        case \".txt\":\n-          return false;\n-      }\n-\n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n         value: entry.value\n"
                },
                {
                    "date": 1687286979736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,13 @@\n   new WebpackAssetsPlugin({\n     output: \"manifest.json\",\n     merge: false,\n     customize(entry) {\n+      switch (path.extname(entry.key).toLowerCase()) {\n+        case \".map\":\n+        case \".txt\":\n+          return false;\n+      }\n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n         value: entry.value\n"
                },
                {
                    "date": 1687286992248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,10 @@\n       switch (path.extname(entry.key).toLowerCase()) {\n         case \".map\":\n         case \".txt\":\n           return false;\n+          default:\n+            \n       }\n       const prefix = path.dirname(entry.value);\n       return {\n         key: `${prefix}/${entry.key}`,\n"
                },
                {
                    "date": 1687286997739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,16 +34,16 @@\n       switch (path.extname(entry.key).toLowerCase()) {\n         case \".map\":\n         case \".txt\":\n           return false;\n-          default:\n-            \n+        default:\n+          const prefix = path.dirname(entry.value);\n+          return {\n+            key: `${prefix}/${entry.key}`,\n+            value: entry.value\n+          };\n       }\n-      const prefix = path.dirname(entry.value);\n-      return {\n-        key: `${prefix}/${entry.key}`,\n-        value: entry.value\n-      };\n+\n     }\n   })\n ] : [];\n \n"
                }
            ],
            "date": 1687286574353,
            "name": "Commit-0",
            "content": "const webpack = require(\"webpack');\nconst glob = require('glob');\nconst path = require('path');\n\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\nconst WebpackAssetsPlugin = require('webpack-assets-manifest');\n\nconst ProvidePlugin = webpack.ProvidePlugin;\nconst ProgressPlugin = webpack.ProgressPlugin;\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst src = file => path.join('asset', file || '');\nconst dist = file => path.join('src/public', file || '');\n\nfunction makeEntries() {\n  const entries = {};\n\n  glob.sync(path.join(src('js'), '/**/main.js')).map(file => `./${file}`)\n    .forEach(file => {\n      let name = path.dirname(file);\n      name = name.substr(name.lastIndexOf('/') + 1);\n      entries[name] = file;\n    });\n  return entries;\n}\n\nconst prodPlugins = isProd ? [\n  new WebpackAssetsPlugin({\n    output: 'manifest.json',\n    merge: false,\n    customize(entry) {\n      switch (path.extname(entry.key).toLowerCase()) {\n        case '.map':\n          return false;\n        case '.txt':\n          return false;\n      }\n      prefix = path.dirname(entry.value);\n      return { key: `${prefix}/${entry.key}`, value: entry.value };\n    }\n  })\n] : [];\n\nmodule.exports = {\n  mode: isProd ? 'production' : 'development',\n  entry: Object.assign(\n    {\n      vendor: ['jquery', 'bootstrap', 'moment', 'lodash', 'common']\n    },\n    makeEntries()\n  ),\n  output: {\n    path: path.resolve(dist()),\n    filename: isProd ? 'js/[name]-[chunkhash:8].js' : 'js/[name].js',\n    publicPath: '/',\n    chunkFilename: isProd ? 'js/[name]-[chunkhash:8].js' : 'js/[name].js',\n  },\n  resolve: {\n    alias: {\n      common: path.resolve(src('js/common/common.js'))\n    },\n    extensions: ['.js', '.vue', '.json']\n  },\n  optimization: {\n    minimize: isProd,\n    removeEmptyChunks: true,\n    runtimeChunk: {\n      name: 'manifest',\n    }\n  },\n  module: {\n    rules: [{\n      test: /\\.js$/,\n      exclude: [/node_modules/],\n      use: [\n        {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/env']\n          }\n        }\n      ]\n    },\n    {\n      test: /\\.(less|css)$/,\n      use: [\n        MiniCssExtractPlugin.loader,\n        'css-loader',\n        'less-loader'\n      ]\n    }, {\n      test: /\\.(eot|woff|woff2|ttf)$/,\n      use: [\n        {\n          loader: 'url-loader',\n          options: {\n            limit: 1024,\n            fallback: 'file-loader',\n            name: isProd ? 'fonts/[name]-[hash:8].[ext]' : 'fonts/[name].[ext]'\n          }\n        }\n      ]\n    }, {\n      test: /\\.(svg|png|jpg|gif)$/,\n      use: [\n        {\n          loader: 'url-loader',\n          options: {\n            limit: 1024,\n            fallback: 'file-loader',\n            name: isProd ? 'images/[name]-[hash:8].[ext]' : 'images/[name].[ext]'\n          }\n        }\n      ]\n    }]\n  },\n  plugins: [\n    new ProgressPlugin(),\n    new CleanWebpackPlugin(),\n    new ProvidePlugin({\n      $: 'jquery',\n      jQuery: 'jquery',\n      'window.jQuery': 'jquery'\n    }),\n    new CopyWebpackPlugin({\n      patterns: [\n        {\n          from: src('images/*'),\n          to: 'images/[name][ext]'\n        }\n      ]\n    }),\n    new MiniCssExtractPlugin({\n      filename: isProd ? 'css/[name]-[chunkhash:8].css' : 'css/[name].css'\n    }),\n    ...prodPlugins\n  ],\n  devtool: 'cheap-source-map',\n};\n"
        }
    ]
}